/******************************************************************************
 * This file was generated by ZenStack CLI.
 ******************************************************************************/

/* eslint-disable */
// @ts-nocheck

const metadata = {
    models: {
        user: {
            name: 'User', fields: {
                id: {
                    name: "id",
                    type: "Int",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                    isAutoIncrement: true,
                }, name: {
                    name: "name",
                    type: "String",
                }, password: {
                    name: "password",
                    type: "String",
                }, email: {
                    name: "email",
                    type: "String",
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@updatedAt", "args": [] }],
                }, posts: {
                    name: "posts",
                    type: "Post",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'author',
                }, memberOf: {
                    name: "memberOf",
                    type: "Group",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'members',
                }, createdGroups: {
                    name: "createdGroups",
                    type: "Group",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'creator',
                }, auths: {
                    name: "auths",
                    type: "Auth",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'user',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                }, name: {
                    name: "name",
                    fields: ["name"]
                }, email: {
                    name: "email",
                    fields: ["email"]
                },
            },
        },
        group: {
            name: 'Group', fields: {
                id: {
                    name: "id",
                    type: "Int",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                    isAutoIncrement: true,
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@updatedAt", "args": [] }],
                }, name: {
                    name: "name",
                    type: "String",
                }, creator: {
                    name: "creator",
                    type: "User",
                    isDataModel: true,
                    backLink: 'memberOf',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "creatorId" },
                }, creatorId: {
                    name: "creatorId",
                    type: "Int",
                    attributes: [{ "name": "@default", "args": [] }],
                    defaultValueProvider: $default$Group$creatorId,
                    isForeignKey: true,
                    relationField: 'creator',
                }, members: {
                    name: "members",
                    type: "User",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'memberOf',
                }, posts: {
                    name: "posts",
                    type: "Post",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'group',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            },
        },
        post: {
            name: 'Post', fields: {
                id: {
                    name: "id",
                    type: "Int",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                    isAutoIncrement: true,
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@updatedAt", "args": [] }],
                }, content: {
                    name: "content",
                    type: "String",
                }, authorId: {
                    name: "authorId",
                    type: "Int",
                    attributes: [{ "name": "@default", "args": [] }],
                    defaultValueProvider: $default$Post$authorId,
                    isForeignKey: true,
                    relationField: 'author',
                }, author: {
                    name: "author",
                    type: "User",
                    isDataModel: true,
                    backLink: 'posts',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "authorId" },
                }, groupId: {
                    name: "groupId",
                    type: "Int",
                    isForeignKey: true,
                    relationField: 'group',
                }, group: {
                    name: "group",
                    type: "Group",
                    isDataModel: true,
                    backLink: 'posts',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "groupId" },
                }, auths: {
                    name: "auths",
                    type: "Auth",
                    isDataModel: true,
                    isArray: true,
                    backLink: 'post',
                },
            }, uniqueConstraints: {
                id: {
                    name: "id",
                    fields: ["id"]
                },
            },
        },
        auth: {
            name: 'Auth', fields: {
                idd: {
                    name: "idd",
                    type: "Int",
                    isId: true,
                    attributes: [{ "name": "@default", "args": [] }],
                    isAutoIncrement: true,
                }, createdAt: {
                    name: "createdAt",
                    type: "DateTime",
                    attributes: [{ "name": "@default", "args": [] }],
                }, updatedAt: {
                    name: "updatedAt",
                    type: "DateTime",
                    attributes: [{ "name": "@updatedAt", "args": [] }],
                }, userId: {
                    name: "userId",
                    type: "Int",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'user',
                }, user: {
                    name: "user",
                    type: "User",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'auths',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "userId" },
                }, postId: {
                    name: "postId",
                    type: "Int",
                    isOptional: true,
                    isForeignKey: true,
                    relationField: 'post',
                }, post: {
                    name: "post",
                    type: "Post",
                    isDataModel: true,
                    isOptional: true,
                    backLink: 'auths',
                    isRelationOwner: true,
                    foreignKeyMapping: { "id": "postId" },
                }, authId: {
                    name: "authId",
                    type: "Int",
                }, crud: {
                    name: "crud",
                    type: "String",
                },
            }, uniqueConstraints: {
                idd: {
                    name: "idd",
                    fields: ["idd"]
                },
            },
        },

    },
    deleteCascade: {

    },
    authModel: 'User'

};

function $default$Group$creatorId(user: any): unknown {
    return user?.id;
}

function $default$Post$authorId(user: any): unknown {
    return user?.id;
}
export default metadata;
