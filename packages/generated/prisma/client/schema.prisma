//////////////////////////////////////////////////////////////////////////////////////////////
// DO NOT MODIFY THIS FILE                                                                  //
// This file is automatically generated by ZenStack CLI and should not be manually updated. //
//////////////////////////////////////////////////////////////////////////////////////////////

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

generator client {
  provider = "prisma-client-js"
  output   = "../packages/generated/prisma/client"
}

model User {
  id            Int      @id() @default(autoincrement())
  name          String   @unique()
  password      String
  email         String   @unique()
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt()
  posts         Post[]
  memberOf      Group[]  @relation("GroupMembers")
  createdGroups Group[]
  auths         Auth[]
}

model Group {
  id        Int      @id() @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()
  name      String
  creator   User     @relation(fields: [creatorId], references: [id])
  creatorId Int
  members   User[]   @relation("GroupMembers")
  posts     Post[]
}

model Post {
  id        Int      @id() @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()
  content   String
  authorId  Int
  author    User     @relation(fields: [authorId], references: [id])
  groupId   Int
  group     Group    @relation(fields: [groupId], references: [id])
  auths     Auth[]
}

model Auth {
  idd       Int      @id() @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()
  userId    Int?
  user      User?    @relation(fields: [userId], references: [id])
  postId    Int?
  post      Post?    @relation(fields: [postId], references: [id])
  authId    Int
  crud      String
}
